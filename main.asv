n_bits = 100;
amplitude = 1;
variance = 0.25;
sigma = sqrt(variance);
bits = generateBits(n_bits, amplitude);    % Transmitter

% Transmitted signal plot
figure(1);
subplot(4, 1, 1);
stem(bits);
title('Transmitted signal');
xlabel('signal');
ylabel('V');

% Xn = wgn(n_bits, 1, 1, 'linear');
noise = normrnd(0,sigma,[n_bits,1]);    %Gaussian noise
% Noise plot
subplot(4, 1, 2);
stem(noise);
title('Gaussian noise');
xlabel('signal');
ylabel('V');

recieved = bits + noise;       % Channel
% Recieved signal plot
subplot(4, 1, 3);
stem(recieved);
title('Recieved signal');
xlabel('signal');
ylabel('V');

%   Filtering signal
filtered = recieved;
for i = 1 : 1 : n_bits
    if filtered(i, 1) > 0.5
        filtered(i, 1) = 1;
    else
        filtered(i, 1) = 0;
    end
end

subplot(4, 1, 3);
stem(filtered);
title('Filtered signal');
xlabel('signal');
ylabel('V');

% Error count
err = 0;
for i = 1 : 1 : n_bits
    if recieved(i, 1) ~= bits(i, 1)
        err = err + 1;
    end
end

BER = err / n_bits;